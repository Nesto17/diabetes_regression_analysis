vif(model)
stanRes <- rstandard(model)
par(mfrow = c(2, 3))
plot(Insulin, stanRes, ylab = "Standardized Residuals")
plot(BMI, stanRes, ylab = "Standardized Residuals")
plot(BloodPressure, stanRes, ylab = "Standardized Residuals")
plot(DiabetesPedigreeFunction, stanRes, ylab = "Standardized Residuals")
plot(Age, stanRes, ylab = "Standardized Residuals")
par(mfrow=c(2, 3))
avPlot(model, variable = "BloodPressure", ask = F)
avPlot(model, variable = "Insulin", ask = F)
avPlot(model, variable = "BMI", ask = F)
avPlot(model, variable = "DiabetesPedigreeFunction", ask = F)
avPlot(model, variable = "Age", ask = F)
# Transformation
summary(powerTransform(cbind(Insulin, BMI, BloodPressure, DiabetesPedigreeFunction, Age) ~ 1))
tInsulin <- log(Insulin)
tBMI <- log(BMI)
tBloodPressure <- BloodPressure
tDiabetesPedigreeFunction <- log(DiabetesPedigreeFunction)
tAge <- Age^(-2)
t_model <- lm(Glucose ~ tInsulin+tBMI+tBloodPressure+tDiabetesPedigreeFunction+tAge)
invResPlot(t_model)
tGlucose <- log(Glucose)
t_model <- lm(tGlucose ~ tInsulin+tBMI+tBloodPressure+tDiabetesPedigreeFunction+tAge)
summary(t_model)
par(mfrow = c(2, 2))
plot(t_model)
t_stanRes <- rstandard(t_model)
par(mfrow = c(2, 3))
plot(Insulin,  t_stanRes, ylab = "Standardized Residuals")
plot(BMI,  t_stanRes, ylab = "Standardized Residuals")
plot(BloodPressure,  t_stanRes, ylab = "Standardized Residuals")
plot(DiabetesPedigreeFunction,  t_stanRes, ylab = "Standardized Residuals")
plot(Age,  t_stanRes, ylab = "Standardized Residuals")
summary(regsubsets(as.matrix(cbind(tInsulin, tBMI, tBloodPressure, tDiabetesPedigreeFunction, tAge)), tGlucose))
om1 <- lm(tGlucose ~ tInsulin)
om2 <- lm(tGlucose ~ tInsulin + tAge)
om3 <- lm(tGlucose ~ tInsulin + tBloodPressure + tAge)
om4 <- lm(tGlucose ~ tInsulin + tBloodPressure + tDiabetesPedigreeFunction  + tAge)
om5 <- lm(tGlucose ~ tInsulin + tBMI + tBloodPressure + tDiabetesPedigreeFunction  + tAge)
possible_models <- list(om1, om2, om3, om4, om5)
p <- 1:5
n <- nrow(diabetes)
criterias_breakdown <- matrix(0, nrow = 5, ncol = 5)
colnames(criterias_breakdown) <- c("Size", "Adj R2", "AIC", "AICc", "BIC")
# Adjusted R-squared
adj_R2 <- sapply(possible_models, function(mod) { summary(mod)$adj.r.squared })
# AIC
AIC <- sapply(possible_models, function(mod) { extractAIC(mod)[2] })
# AICc
AICc <- rep(0, 5)
for (i in p) {
AICc[i] <- AIC[i] + ((2 * p[i]) * (p[i] + 2) * (p[i] + 3)) / (n - p[i] - 1)
}
# BIC
BIC <- sapply(possible_models, function(mod) { extractAIC(mod, k = log(n))[2] })
criterias_breakdown[, 1:5] <- c(p, adj_R2, AIC, AICc, BIC)
criterias_breakdown
summary(om2)
summary(om3)
final_mod <- lm(tGlucose ~ tInsulin + tBloodPressure + tAge)
summary(final_mod)
predict(final_mod, diabetes_test)
predict(final_mod, diabetes_train)
predict(final_mod, diabetes_test)
diabetes_train
diabetes_test
nrow(diabetes_train)
nrow(diabetes_test)
knitr::opts_chunk$set(echo = TRUE)
library("readr")
library("tidyr")
library("dplyr")
library("car")
library("leaps")
library("caTools")
diabetes <- read.csv("diabetes.csv")
diabetes <- diabetes %>%
filter(Glucose != 0, BloodPressure != 0, Insulin != 0, BMI != 0, DiabetesPedigreeFunction != 0, Age != 0) %>%
select(c(2,3,5,6,7,8))
set.seed(1)
sample <- sample.split(diabetes$Glucose, SplitRatio = 0.7)
diabetes_train = subset(diabetes, sample == TRUE)
diabetes_test = subset(diabetes, sample == FALSE)
attach(diabetes_train)
model <- lm(Glucose ~ Insulin+BMI+BloodPressure+DiabetesPedigreeFunction+Age)
# Pairs
pairs(diabetes)
# Model summary
summary(model)
# ANOVA Table
anova(model)
# Plot model
par(mfrow = c(2,2))
plot(model)
# Leverage Points
hats <- hatvalues(model)
leverages <- hats[hats > 2 * mean(hats)]
outliers <- hats[abs(rstandard(model)) >= 2]
leverages
outliers
outliers[names(outliers) %in% names(leverages)]
vif(model)
stanRes <- rstandard(model)
par(mfrow = c(2, 3))
plot(Insulin, stanRes, ylab = "Standardized Residuals")
plot(BMI, stanRes, ylab = "Standardized Residuals")
plot(BloodPressure, stanRes, ylab = "Standardized Residuals")
plot(DiabetesPedigreeFunction, stanRes, ylab = "Standardized Residuals")
plot(Age, stanRes, ylab = "Standardized Residuals")
par(mfrow=c(2, 3))
avPlot(model, variable = "BloodPressure", ask = F)
avPlot(model, variable = "Insulin", ask = F)
avPlot(model, variable = "BMI", ask = F)
avPlot(model, variable = "DiabetesPedigreeFunction", ask = F)
avPlot(model, variable = "Age", ask = F)
# Transformation
summary(powerTransform(cbind(Insulin, BMI, BloodPressure, DiabetesPedigreeFunction, Age) ~ 1))
tInsulin <- log(Insulin)
tBMI <- log(BMI)
tBloodPressure <- BloodPressure
tDiabetesPedigreeFunction <- log(DiabetesPedigreeFunction)
tAge <- Age^(-2)
t_model <- lm(Glucose ~ tInsulin+tBMI+tBloodPressure+tDiabetesPedigreeFunction+tAge)
invResPlot(t_model)
tGlucose <- log(Glucose)
t_model <- lm(tGlucose ~ tInsulin+tBMI+tBloodPressure+tDiabetesPedigreeFunction+tAge)
summary(t_model)
par(mfrow = c(2, 2))
plot(t_model)
t_stanRes <- rstandard(t_model)
par(mfrow = c(2, 3))
plot(Insulin,  t_stanRes, ylab = "Standardized Residuals")
plot(BMI,  t_stanRes, ylab = "Standardized Residuals")
plot(BloodPressure,  t_stanRes, ylab = "Standardized Residuals")
plot(DiabetesPedigreeFunction,  t_stanRes, ylab = "Standardized Residuals")
plot(Age,  t_stanRes, ylab = "Standardized Residuals")
summary(regsubsets(as.matrix(cbind(tInsulin, tBMI, tBloodPressure, tDiabetesPedigreeFunction, tAge)), tGlucose))
om1 <- lm(tGlucose ~ tInsulin)
om2 <- lm(tGlucose ~ tInsulin + tAge)
om3 <- lm(tGlucose ~ tInsulin + tBloodPressure + tAge)
om4 <- lm(tGlucose ~ tInsulin + tBloodPressure + tDiabetesPedigreeFunction  + tAge)
om5 <- lm(tGlucose ~ tInsulin + tBMI + tBloodPressure + tDiabetesPedigreeFunction  + tAge)
possible_models <- list(om1, om2, om3, om4, om5)
p <- 1:5
n <- nrow(diabetes)
criterias_breakdown <- matrix(0, nrow = 5, ncol = 5)
colnames(criterias_breakdown) <- c("Size", "Adj R2", "AIC", "AICc", "BIC")
# Adjusted R-squared
adj_R2 <- sapply(possible_models, function(mod) { summary(mod)$adj.r.squared })
# AIC
AIC <- sapply(possible_models, function(mod) { extractAIC(mod)[2] })
# AICc
AICc <- rep(0, 5)
for (i in p) {
AICc[i] <- AIC[i] + ((2 * p[i]) * (p[i] + 2) * (p[i] + 3)) / (n - p[i] - 1)
}
# BIC
BIC <- sapply(possible_models, function(mod) { extractAIC(mod, k = log(n))[2] })
criterias_breakdown[, 1:5] <- c(p, adj_R2, AIC, AICc, BIC)
criterias_breakdown
summary(om2)
summary(om3)
final_mod <- lm(tGlucose ~ tInsulin + tBloodPressure + tAge)
summary(final_mod)
predict(final_mod, diabetes_test)
predict(final_mod, diabetes_test)
nrow(diabetes_test)
?predict
diabetes <- diabetes %>%
filter(Glucose != 0, BloodPressure != 0, Insulin != 0, BMI != 0, DiabetesPedigreeFunction != 0, Age != 0) %>%
select(c(2,3,5,6,7,8))
predict(final_mod, data.frame(x = x1))
predict(final_mod, data.frame(x = Glucose))
predict(final_mod, data.frame(x = Insulin))
predict(final_mod, data.frame(x = BMI))
attach(diabetes_test)
predict(final_mod, data.frame(x = Insulin))
predict(final_mod, newdata = diabetes_test)
attach(diabetes_test)
predict(final_mod, newdata = diabetes_test)
knitr::opts_chunk$set(echo = TRUE)
library("readr")
library("tidyr")
library("dplyr")
library("car")
library("leaps")
library("caTools")
diabetes <- read.csv("diabetes.csv")
diabetes <- diabetes %>%
filter(Glucose != 0, BloodPressure != 0, Insulin != 0, BMI != 0, DiabetesPedigreeFunction != 0, Age != 0) %>%
select(c(2,3,5,6,7,8))
set.seed(1)
sample <- sample.split(diabetes$Glucose, SplitRatio = 0.7)
diabetes_train = subset(diabetes, sample == TRUE)
diabetes_test = subset(diabetes, sample == FALSE)
attach(diabetes_train)
model <- lm(Glucose ~ Insulin+BMI+BloodPressure+DiabetesPedigreeFunction+Age)
# Pairs
pairs(diabetes)
# Model summary
summary(model)
# ANOVA Table
anova(model)
# Plot model
par(mfrow = c(2,2))
plot(model)
# Leverage Points
hats <- hatvalues(model)
leverages <- hats[hats > 2 * mean(hats)]
outliers <- hats[abs(rstandard(model)) >= 2]
leverages
outliers
outliers[names(outliers) %in% names(leverages)]
vif(model)
stanRes <- rstandard(model)
par(mfrow = c(2, 3))
plot(Insulin, stanRes, ylab = "Standardized Residuals")
plot(BMI, stanRes, ylab = "Standardized Residuals")
plot(BloodPressure, stanRes, ylab = "Standardized Residuals")
plot(DiabetesPedigreeFunction, stanRes, ylab = "Standardized Residuals")
plot(Age, stanRes, ylab = "Standardized Residuals")
par(mfrow=c(2, 3))
avPlot(model, variable = "BloodPressure", ask = F)
avPlot(model, variable = "Insulin", ask = F)
avPlot(model, variable = "BMI", ask = F)
avPlot(model, variable = "DiabetesPedigreeFunction", ask = F)
avPlot(model, variable = "Age", ask = F)
# Transformation
summary(powerTransform(cbind(Insulin, BMI, BloodPressure, DiabetesPedigreeFunction, Age) ~ 1))
tInsulin <- log(Insulin)
tBMI <- log(BMI)
tBloodPressure <- BloodPressure
tDiabetesPedigreeFunction <- log(DiabetesPedigreeFunction)
tAge <- Age^(-2)
t_model <- lm(Glucose ~ tInsulin+tBMI+tBloodPressure+tDiabetesPedigreeFunction+tAge)
invResPlot(t_model)
tGlucose <- log(Glucose)
t_model <- lm(tGlucose ~ tInsulin+tBMI+tBloodPressure+tDiabetesPedigreeFunction+tAge)
summary(t_model)
par(mfrow = c(2, 2))
plot(t_model)
t_stanRes <- rstandard(t_model)
par(mfrow = c(2, 3))
plot(Insulin,  t_stanRes, ylab = "Standardized Residuals")
plot(BMI,  t_stanRes, ylab = "Standardized Residuals")
plot(BloodPressure,  t_stanRes, ylab = "Standardized Residuals")
plot(DiabetesPedigreeFunction,  t_stanRes, ylab = "Standardized Residuals")
plot(Age,  t_stanRes, ylab = "Standardized Residuals")
summary(regsubsets(as.matrix(cbind(tInsulin, tBMI, tBloodPressure, tDiabetesPedigreeFunction, tAge)), tGlucose))
om1 <- lm(tGlucose ~ tInsulin)
om2 <- lm(tGlucose ~ tInsulin + tAge)
om3 <- lm(tGlucose ~ tInsulin + tBloodPressure + tAge)
om4 <- lm(tGlucose ~ tInsulin + tBloodPressure + tDiabetesPedigreeFunction  + tAge)
om5 <- lm(tGlucose ~ tInsulin + tBMI + tBloodPressure + tDiabetesPedigreeFunction  + tAge)
possible_models <- list(om1, om2, om3, om4, om5)
p <- 1:5
n <- nrow(diabetes)
criterias_breakdown <- matrix(0, nrow = 5, ncol = 5)
colnames(criterias_breakdown) <- c("Size", "Adj R2", "AIC", "AICc", "BIC")
# Adjusted R-squared
adj_R2 <- sapply(possible_models, function(mod) { summary(mod)$adj.r.squared })
# AIC
AIC <- sapply(possible_models, function(mod) { extractAIC(mod)[2] })
# AICc
AICc <- rep(0, 5)
for (i in p) {
AICc[i] <- AIC[i] + ((2 * p[i]) * (p[i] + 2) * (p[i] + 3)) / (n - p[i] - 1)
}
# BIC
BIC <- sapply(possible_models, function(mod) { extractAIC(mod, k = log(n))[2] })
criterias_breakdown[, 1:5] <- c(p, adj_R2, AIC, AICc, BIC)
criterias_breakdown
summary(om2)
summary(om3)
final_mod <- lm(tGlucose ~ tInsulin + tBloodPressure + tAge)
summary(final_mod)
predict(final_mod, newdata = diabetes_test)
knitr::opts_chunk$set(echo = TRUE)
library("readr")
library("tidyr")
library("dplyr")
library("car")
library("leaps")
library("caTools")
diabetes <- read.csv("diabetes.csv")
diabetes <- diabetes %>%
filter(Glucose != 0, BloodPressure != 0, Insulin != 0, BMI != 0, DiabetesPedigreeFunction != 0, Age != 0) %>%
select(c(2,3,5,6,7,8))
set.seed(1)
sample <- sample.split(diabetes$Glucose, SplitRatio = 0.7)
diabetes_train = subset(diabetes, sample == TRUE)
diabetes_test = subset(diabetes, sample == FALSE)
attach(diabetes_train)
model <- lm(Glucose ~ Insulin+BMI+BloodPressure+DiabetesPedigreeFunction+Age)
# Pairs
pairs(diabetes)
# Model summary
summary(model)
# ANOVA Table
anova(model)
# Plot model
par(mfrow = c(2,2))
plot(model)
# Leverage Points
hats <- hatvalues(model)
leverages <- hats[hats > 2 * mean(hats)]
outliers <- hats[abs(rstandard(model)) >= 2]
leverages
outliers
outliers[names(outliers) %in% names(leverages)]
vif(model)
stanRes <- rstandard(model)
par(mfrow = c(2, 3))
plot(Insulin, stanRes, ylab = "Standardized Residuals")
plot(BMI, stanRes, ylab = "Standardized Residuals")
plot(BloodPressure, stanRes, ylab = "Standardized Residuals")
plot(DiabetesPedigreeFunction, stanRes, ylab = "Standardized Residuals")
plot(Age, stanRes, ylab = "Standardized Residuals")
par(mfrow=c(2, 3))
avPlot(model, variable = "BloodPressure", ask = F)
avPlot(model, variable = "Insulin", ask = F)
avPlot(model, variable = "BMI", ask = F)
avPlot(model, variable = "DiabetesPedigreeFunction", ask = F)
avPlot(model, variable = "Age", ask = F)
# Transformation
summary(powerTransform(cbind(Insulin, BMI, BloodPressure, DiabetesPedigreeFunction, Age) ~ 1))
tInsulin <- log(Insulin)
tBMI <- log(BMI)
tBloodPressure <- BloodPressure
tDiabetesPedigreeFunction <- log(DiabetesPedigreeFunction)
tAge <- Age^(-2)
t_model <- lm(Glucose ~ tInsulin+tBMI+tBloodPressure+tDiabetesPedigreeFunction+tAge)
invResPlot(t_model)
tGlucose <- log(Glucose)
t_model <- lm(tGlucose ~ tInsulin+tBMI+tBloodPressure+tDiabetesPedigreeFunction+tAge)
summary(t_model)
par(mfrow = c(2, 2))
plot(t_model)
t_stanRes <- rstandard(t_model)
par(mfrow = c(2, 3))
plot(Insulin,  t_stanRes, ylab = "Standardized Residuals")
plot(BMI,  t_stanRes, ylab = "Standardized Residuals")
plot(BloodPressure,  t_stanRes, ylab = "Standardized Residuals")
plot(DiabetesPedigreeFunction,  t_stanRes, ylab = "Standardized Residuals")
plot(Age,  t_stanRes, ylab = "Standardized Residuals")
summary(regsubsets(as.matrix(cbind(tInsulin, tBMI, tBloodPressure, tDiabetesPedigreeFunction, tAge)), tGlucose))
om1 <- lm(tGlucose ~ tInsulin)
om2 <- lm(tGlucose ~ tInsulin + tAge)
om3 <- lm(tGlucose ~ tInsulin + tBloodPressure + tAge)
om4 <- lm(tGlucose ~ tInsulin + tBloodPressure + tDiabetesPedigreeFunction  + tAge)
om5 <- lm(tGlucose ~ tInsulin + tBMI + tBloodPressure + tDiabetesPedigreeFunction  + tAge)
possible_models <- list(om1, om2, om3, om4, om5)
p <- 1:5
n <- nrow(diabetes)
criterias_breakdown <- matrix(0, nrow = 5, ncol = 5)
colnames(criterias_breakdown) <- c("Size", "Adj R2", "AIC", "AICc", "BIC")
# Adjusted R-squared
adj_R2 <- sapply(possible_models, function(mod) { summary(mod)$adj.r.squared })
# AIC
AIC <- sapply(possible_models, function(mod) { extractAIC(mod)[2] })
# AICc
AICc <- rep(0, 5)
for (i in p) {
AICc[i] <- AIC[i] + ((2 * p[i]) * (p[i] + 2) * (p[i] + 3)) / (n - p[i] - 1)
}
# BIC
BIC <- sapply(possible_models, function(mod) { extractAIC(mod, k = log(n))[2] })
criterias_breakdown[, 1:5] <- c(p, adj_R2, AIC, AICc, BIC)
criterias_breakdown
summary(om2)
summary(om3)
final_mod <- lm(tGlucose ~ tInsulin + tBloodPressure + tAge)
summary(final_mod)
predict(final_mod, newdata = diabetes_test)
diabetes <- diabetes %>%
filter(Glucose != 0, BloodPressure != 0, Insulin != 0, BMI != 0, DiabetesPedigreeFunction != 0, Age != 0) %>%
select(c(2,3,5,6,7,8))
diabetes <- read.csv("diabetes.csv")
diabetes <- diabetes %>%
filter(Glucose != 0, BloodPressure != 0, Insulin != 0, BMI != 0, DiabetesPedigreeFunction != 0, Age != 0) %>%
select(c(2,3,5,6,7,8))
set.seed(1)
sample <- sample.split(diabetes$Glucose, SplitRatio = 0.7)
diabetes_train = subset(diabetes, sample == TRUE)
diabetes_test = subset(diabetes, sample == FALSE)
# attach(diabetes_train)
model <- lm(Glucose ~ Insulin+BMI+BloodPressure+DiabetesPedigreeFunction+Age, data = diabetes_train)
predict(model, newdata = diabetes_test)
predict(model, newdata = diabetes_train)
head(diabetes_train)
diabetes
diabetes <- read.csv("diabetes.csv")
diabetes <- diabetes %>%
filter(Glucose != 0, BloodPressure != 0, Insulin != 0, BMI != 0, DiabetesPedigreeFunction != 0, Age != 0) %>%
select(c(2,3,5,6,7,8))
sample <- sample.split(diabetes$Glucose, SplitRatio = 0.7)
sampple
sample
diabetes_train = subset(diabetes, sample == TRUE)
diabetes_test = subset(diabetes, sample == FALSE)
nrow(diabetes_train)
nrow(diabetes_test)
model <- lm(Glucose ~ Insulin+BMI+BloodPressure+DiabetesPedigreeFunction+Age, data = diabetes_train)
predict(model, newdata = diabetes_train)
head(diabetes_train)
predict(model, newdata = diabetes_test)
pred <- predict(model, newdata = diabetes_test)
pred <- predict(model, newdata = diabetes_test)
(RSS <- sum((diabetes_test$Glucose - pred)^2))
diabetes <- read.csv("diabetes.csv")
diabetes <- diabetes %>%
filter(Glucose != 0, BloodPressure != 0, Insulin != 0, BMI != 0, DiabetesPedigreeFunction != 0, Age != 0) %>%
select(c(2,3,5,6,7,8))
set.seed(1)
sample <- sample.split(diabetes$Glucose, SplitRatio = 0.7)
diabetes_train = subset(diabetes, sample == TRUE)
diabetes_test = subset(diabetes, sample == FALSE)
# attach(diabetes_train)
model <- lm(Glucose ~ Insulin+BMI+BloodPressure+DiabetesPedigreeFunction+Age, data = diabetes_train)
pred <- predict(model, newdata = diabetes_train)
(RSS <- sum((diabetes_test$Glucose - pred)^2))
pred <- predict(model, newdata = diabetes_train)
(RSS <- sum((diabetes_train$Glucose - pred)^2))
pred <- predict(model, newdata = diabetes_train)
(RSS <- mean((diabetes_train$Glucose - pred)^2))
pred <- predict(model, newdata = diabetes_test)
(RSS <- mean((diabetes_test$Glucose - pred)^2))
pred <- predict(model, newdata = diabetes_train)
(RSS <- mean((diabetes_train$Glucose - pred)^2))
diabetes <- read.csv("diabetes.csv")
diabetes <- diabetes %>%
filter(Glucose != 0, BloodPressure != 0, Insulin != 0, BMI != 0, DiabetesPedigreeFunction != 0, Age != 0) %>%
select(c(2,3,5,6,7,8))
set.seed(1)
sample <- sample.split(diabetes$Glucose, SplitRatio = 0.7)
diabetes_train = subset(diabetes, sample == TRUE)
diabetes_test = subset(diabetes, sample == FALSE)
# attach(diabetes_train)
model <- lm(Glucose ~ Insulin+BMI+BloodPressure+DiabetesPedigreeFunction+Age, data = diabetes_train)
head(diabetes_train, 3)
diabetes_test %>% select(-1)
diabetes <- read.csv("diabetes.csv")
diabetes <- diabetes %>%
filter(Glucose != 0, BloodPressure != 0, Insulin != 0, BMI != 0, DiabetesPedigreeFunction != 0, Age != 0) %>%
select(c(2,3,5,6,7,8))
set.seed(1)
sample <- sample.split(diabetes$Glucose, SplitRatio = 0.7)
diabetes_train = subset(diabetes, sample == TRUE)
diabetes_test = subset(diabetes, sample == FALSE)
# attach(diabetes_train)
model <- lm(Glucose ~ Insulin+BMI+BloodPressure+DiabetesPedigreeFunction+Age, data = diabetes_train)
# new <- data.frame(
#   Glucose
# )
diabetes_test %>% select(-1)
pred <- predict(model, newdata = diabetes_test)
pred
# (RSS <- mean((diabetes_test$Glucose - pred)^2))
diabetes <- read.csv("diabetes.csv")
diabetes <- diabetes %>%
filter(Glucose != 0, BloodPressure != 0, Insulin != 0, BMI != 0, DiabetesPedigreeFunction != 0, Age != 0) %>%
select(c(2,3,5,6,7,8))
set.seed(1)
sample <- sample.split(diabetes$Glucose, SplitRatio = 0.7)
diabetes_train = subset(diabetes, sample == TRUE)
diabetes_test = subset(diabetes, sample == FALSE)
# attach(diabetes_train)
model <- lm(Glucose ~ Insulin+BMI+BloodPressure+DiabetesPedigreeFunction+Age, data = diabetes_train)
# new <- data.frame(
#   Glucose
# )
diabetes_test2 <- diabetes_test %>% select(-1)
pred <- predict(model, newdata = diabetes_test2)
(RSS <- mean((diabetes_test$Glucose - pred)^2))
pred
# new <- data.frame(
#   Glucose
# )
diabetes_test2 <- diabetes_test %>% select(-1)
diabetes_train2 <- diabetes_train %>% select(-1)
pred <- predict(model, newdata = diabetes_train2)
(RSS <- mean((diabetes_train$Glucose - pred)^2))
head(diabetes_trainm 3)
head(diabetes_train, 3)
predict(model, newdata = new)
new <- data.frame(
BloodPressure = c(40),
Insulin = c(168),
BMI = c(43.1),
DiabetesPedigreeFunction = c(2.288),
Age = c(33)
)
predict(model, newdata = new)
head(diabetes_train, 3)
# Model summary
summary(model)
diabetes <- read.csv("diabetes.csv")
diabetes <- diabetes %>%
filter(Glucose != 0, BloodPressure != 0, Insulin != 0, BMI != 0, DiabetesPedigreeFunction != 0, Age != 0) %>%
select(c(2,3,5,6,7,8))
set.seed(1)
sample <- sample.split(diabetes$Glucose, SplitRatio = 0.7)
diabetes_train = subset(diabetes, sample == TRUE)
diabetes_test = subset(diabetes, sample == FALSE)
attach(diabetes_train)
model <- lm(Glucose ~ Insulin+BMI+BloodPressure+DiabetesPedigreeFunction+Age, data = diabetes_train)
# Model summary
summary(model)
diabetes_train[3, ]
diabetes_train[2, ]
